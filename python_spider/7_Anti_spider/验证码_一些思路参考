
1. 图像识别
1.1  让图片 尽量黑白 尽量只剩下字符本身  pytesseract

2.2 用 python 强大的 OCR 工具 Python-tesseract


##直接识别
captcha = Image.open("captcha1.png")
result = pytesseract.image_to_string(captcha)
print(result)


###二值化
captcha = Image.open("captcha2.png")
def convert_img(img,threshold):
    img = img.convert("L")  # 处理灰度
    pixels = img.load()
    for x in range(img.width):
        for y in range(img.height):
            if pixels[x, y] > threshold:
                pixels[x, y] = 255
            else:
                pixels[x, y] = 0
    return img
convert_img(captcha,150)



####降噪
data = img.getdata()
    w,h = img.size
    count = 0
    for x in range(1,h-1):
        for y in range(1, h - 1):
            # 找出各个像素方向
            mid_pixel = data[w * y + x]
            if mid_pixel == 0:
                top_pixel = data[w * (y - 1) + x]
                left_pixel = data[w * y + (x - 1)]
                down_pixel = data[w * (y + 1) + x]               
                right_pixel = data[w * y + (x + 1)]
                if top_pixel == 0:
                    count += 1
                if left_pixel == 0:
                    count += 1
                if down_pixel == 0:
                    count += 1
                if right_pixel == 0:
                    count += 1
                if count > 4:
                    img.putpixel((x, y), 0)

2. 滑动
 其中一种思路
  2.1获取滑动的图片本身 将其拼凑成一张完整的图片
  2.2seleinum获取滑动控件
  2.3设置滑动路径、控制滑动速度、用两张图片的diff来计算滑动距离。模拟人去滑动