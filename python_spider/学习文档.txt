Urllib：用来连接url登陆等获取返回信息；可伪装为浏览器，全模拟连接； 配合fiddle抓包工具使用 ；--范例见1_Urllib_study下的urllib.py ,urllib_request_Request.py 

requests:
安装requests： pip install requests
比Urllib更简单的访问url。以后主要用这个来访问。  --范例见2_requests_study\requests_1.py

re：该模块用作正则表达式  和其它类似 主要有 字符串匹配、切片、替换所有、查找所有等  --范例见3_re_study\re_1.py

当当网爬取练习：包含了主方法和函数的使用、re和requests库的使用、异常处理使用、文件打开与写入的使用、yield与生成器generator的使用、if和for循环的使用  --范例见4_Examples\1re&requests_dangdang.py
其中在 4_Examples\1_re&requests_dangdang.py和 4_Examples\2_path.py中包含了os路径模块的使用

BeautifulSoup:网页解析库将网页解析为dom树对象；可以从 HTML 或 XML 文件中提取数据
安装：pip install beautifulsoup4   参考文档：https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/
lxml：解析器 pip install lxml #众多解析器的一种
--范例见 3_re_study\re_2_BeautifulSoup.py

豆瓣网页爬取练习：包含BeautifulSoup和requests库的使用、xlwt库(写入excel)的使用 

selenium库：主要用来模拟人的行为；见 \5_selenium_study\selenium_1_config.py   ;感觉是比较核心的部分；可以操作dom树和几乎所有人的行为 ；

bilibili网页爬取练习：包含BeautifulSoup和selenium库的使用 --范例见\4_Examples\4_selenium&phantomjs.py


threading：python现用线程库    --范例见   \6_Thread_process\thread_1.py

ThreadPoolExecutor：线程池  --范例见 \6_Thread_process\thread_2_ThreadPoolExecutor.py

multiprocessing:多进程有关的库 --范例见 \6_Thread_process\process_3_multiprocessing.py

百度搜索爬取以及子页面内容初步提取;融合 multiprocessing、selenium、BeautifulSoup、requests的组合应用


其他的库：--用的时候在学 ，暂停一一段落
    appium --操作手机app的库，作用类似selenium
    数据分析：
        matplotlib ---数据可视化相关应用
        seaborn --基于matplotlib 的库，有更加高级的接口给我们使用
        pyecharts  -- 这是基于百度开源的数据可视化的 echarts 的库

    scrapy --爬虫框架
        依赖库：lxml parsel  w3lib twisted cryptography and pyOpenSSL
        安装：pip install Scrapy
        拥有一整套爬取的方法，包含连接，信息获取，html解析，存入数据库

    mitmproxy：
        类似fiddler。不同的是它可以监听代理指向它的请求，获取信息，同时修改请求。 作用很大（截取网页通信信息，修改通信内容等等） 
        手机端的话和电脑连接同一wifi,修改代理ip为电脑ip

    常见反爬：
        css加密：如位置信息错乱,字体编码加密等。应对，解析编码
        js加密：如请求传输参数进行加解密。应对,调试找js文件
        app：查壳脱壳反编译。
            设备：安卓手机
            抓包：fiddler+xposed+JustTrustme   --获取请求信息
            查壳：ApkScan-PKID          --查看有无加壳加固
            脱壳：frida-DEXDump         --有则脱壳
            反编译：jadx-gui    --反编译让你大致看到信息
            hook：frida         --监听事件、截获消息、替换原函数 也叫钩子、挂钩
        Python 有专门的库来操作 socket

    websocket-client、websockets库：连接websocket协议，这类一般用于实时获取，数据动态变化的情况，如股票走势、直播等  --ws协议
    分布式爬虫：模块解耦，多服务器部署，redis进行消息通信

